<?xml version="1.0"?>
<!DOCTYPE look-and-feel PUBLIC "-//Liferay//DTD Look and Feel 7.0.0//EN" "http://www.liferay.com/dtd/liferay-look-and-feel_7_0_0.dtd">

<look-and-feel>
	<compatibility>
		<version>7.0.0+</version>
	</compatibility>
	<theme id="legacy" name="Legacy">
		<template-extension>ftl</template-extension>
		<portlet-decorator id="decorate" name="Decorate">
			<default-portlet-decorator>true</default-portlet-decorator>
			<portlet-decorator-css-class>portlet-decorate</portlet-decorator-css-class>
		</portlet-decorator>
        <portlet-decorator id="barebone" name="Barebone">
            <portlet-decorator-css-class>portlet-barebone</portlet-decorator-css-class>
        </portlet-decorator>
        <portlet-decorator id="borderless" name="Borderless">
            <portlet-decorator-css-class>portlet-borderless</portlet-decorator-css-class>
        </portlet-decorator>
		<portlet-decorator id="nopadding" name="Without Padding">
			<portlet-decorator-css-class>portlet-noPadding</portlet-decorator-css-class>
		</portlet-decorator>
		<portlet-decorator id="fullwidth" name="Full Width">
			<portlet-decorator-css-class>portlet-fullWidth</portlet-decorator-css-class>
		</portlet-decorator>
		<portlet-decorator id="nopaddingmargin" name="Without Padding and Margin">
			<portlet-decorator-css-class>portlet-noPaddingMargin</portlet-decorator-css-class>
		</portlet-decorator>
		<portlet-decorator id="nopaddingmarginwhite" name="White Without Padding and Margin ">
			<portlet-decorator-css-class>portlet-noPaddingMarginWhite</portlet-decorator-css-class>
		</portlet-decorator>

		<settings>
			<setting configurable="true" key="Show-Breadcrumbs" type="checkbox" value="false"/>

            <setting configurable="true" key="Header-Fluid-or-Not-Fluid" type="select" options="Header Fluid, Header Not Fluid" value="Header Fluid"/>

            <setting configurable="true" key="Header-Type" type="select" options="Full Width Header, Box Header" value="Full Width Header"/>

            <setting configurable="true" key="Container-Fluid-or-Not-Fluid" type="select" options="Container Fluid, Container Not Fluid" value="Container Fluid"/>

			<setting configurable="true" key="Brand-Color" type="text" value="#1d628b">
                    <![CDATA[
                            AUI().ready(
                                'aui-color-picker-popover',
                                function(A) {

                                    var target = A.one('#[@NAMESPACE@]Brand-Color');
                                    target.attr('readonly', 'readonly');
                                    var currentValue = target.val();


                                    setTimeout(function() {

                                        target.ancestor().append("<span class='glyphicon glyphicon-pencil' aria-hidden='true' style='top: -30px;left: calc(100% - 25px);color: #869cad;'></span>");
                                        target.ancestor().append("<div id='[@NAMESPACE@]PortalMainColorPicker1'></div>");

                                            var [@NAMESPACE@]PortalMainColorPicker1 = new A.ColorPickerPopover(
                                                {
													trigger: target
                                                }
                                            ).render('#[@NAMESPACE@]PortalMainColorPicker1');

                                            [@NAMESPACE@]PortalMainColorPicker1.on('select',
                                                function(event) {
                                                    var hex = event.color;

                                                    target.val(hex);
                                                    target.setStyle('backgroundColor', hex);



													var rgb = hexToRgb(hex);

													var red=rgb.r;
													var blue=rgb.b;
													var green=rgb.g;

													var brightness;
													brightness = (red * 299) + (green * 587) + (blue * 114);
													brightness = brightness / 255000;

													if (brightness >= 0.5) {

														target.setStyle('color','#869cad');
														target.next().setStyle('color','#869cad');

													} else {

														target.setStyle('color','#ffffff');
														target.next().setStyle('color','#ffffff');

													};

                                                }
                                            );

											function hexToRgb(hex) {
                                                var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
                                                hex = hex.replace(shorthandRegex, function(m, r, g, b) {
                                                    return r + r + g + g + b + b;
                                                });

                                                var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
                                                return result ? {
                                                    r: parseInt(result[1], 16),
                                                    g: parseInt(result[2], 16),
                                                    b: parseInt(result[3], 16)
                                                } : null;
                                            };


                                    }, 1000);
                                }
                            );

                    ]]>
            </setting>

            <setting configurable="true" key="Brand-Color-Text" type="text" value="#fff">

                    <![CDATA[
                            AUI().ready(
                                'aui-color-picker-popover',
                                function(A) {

                                    var target = A.one('#[@NAMESPACE@]Brand-Color-Text');
                                    target.attr('readonly', 'readonly');
                                    var currentValue = target.val();


                                    setTimeout(function() {

                                        target.ancestor().append("<span class='glyphicon glyphicon-pencil' aria-hidden='true' style='top: -30px;left: calc(100% - 25px);color: #869cad;'></span>");
                                        target.ancestor().append("<div id='[@NAMESPACE@]PortalMainColorPicker1'></div>");

                                            var [@NAMESPACE@]PortalMainColorPicker1 = new A.ColorPickerPopover(
                                                {
													trigger: target
                                                }
                                            ).render('#[@NAMESPACE@]PortalMainColorPicker1');

                                            [@NAMESPACE@]PortalMainColorPicker1.on('select',
                                                function(event) {
                                                    var hex = event.color;

                                                    target.val(hex);
                                                    target.setStyle('backgroundColor', hex);



													var rgb = hexToRgb(hex);

													var red=rgb.r;
													var blue=rgb.b;
													var green=rgb.g;

													var brightness;
													brightness = (red * 299) + (green * 587) + (blue * 114);
													brightness = brightness / 255000;

													if (brightness >= 0.5) {

														target.setStyle('color','#869cad');
														target.next().setStyle('color','#869cad');

													} else {

														target.setStyle('color','#ffffff');
														target.next().setStyle('color','#ffffff');

													};

                                                }
                                            );

											function hexToRgb(hex) {
                                                var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
                                                hex = hex.replace(shorthandRegex, function(m, r, g, b) {
                                                    return r + r + g + g + b + b;
                                                });

                                                var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
                                                return result ? {
                                                    r: parseInt(result[1], 16),
                                                    g: parseInt(result[2], 16),
                                                    b: parseInt(result[3], 16)
                                                } : null;
                                            };


                                    }, 1000);
                                }
                            );

                    ]]>

			</setting>
			<setting configurable="true" key="Gray-Base" type="text" value="#444">

                    <![CDATA[
                            AUI().ready(
                                'aui-color-picker-popover',
                                function(A) {

                                    var target = A.one('#[@NAMESPACE@]Gray-Base');
                                    target.attr('readonly', 'readonly');
                                    var currentValue = target.val();


                                    setTimeout(function() {

                                        target.ancestor().append("<span class='glyphicon glyphicon-pencil' aria-hidden='true' style='top: -30px;left: calc(100% - 25px);color: #869cad;'></span>");
                                        target.ancestor().append("<div id='[@NAMESPACE@]PortalMainColorPicker1'></div>");

                                            var [@NAMESPACE@]PortalMainColorPicker1 = new A.ColorPickerPopover(
                                                {
													trigger: target
                                                }
                                            ).render('#[@NAMESPACE@]PortalMainColorPicker1');

                                            [@NAMESPACE@]PortalMainColorPicker1.on('select',
                                                function(event) {
                                                    var hex = event.color;

                                                    target.val(hex);
                                                    target.setStyle('backgroundColor', hex);



													var rgb = hexToRgb(hex);

													var red=rgb.r;
													var blue=rgb.b;
													var green=rgb.g;

													var brightness;
													brightness = (red * 299) + (green * 587) + (blue * 114);
													brightness = brightness / 255000;

													if (brightness >= 0.5) {

														target.setStyle('color','#869cad');
														target.next().setStyle('color','#869cad');

													} else {

														target.setStyle('color','#ffffff');
														target.next().setStyle('color','#ffffff');

													};

                                                }
                                            );

											function hexToRgb(hex) {
                                                var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
                                                hex = hex.replace(shorthandRegex, function(m, r, g, b) {
                                                    return r + r + g + g + b + b;
                                                });

                                                var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
                                                return result ? {
                                                    r: parseInt(result[1], 16),
                                                    g: parseInt(result[2], 16),
                                                    b: parseInt(result[3], 16)
                                                } : null;
                                            };


                                    }, 1000);
                                }
                            );

                    ]]>

			</setting>

			<setting configurable="true" key="Navbar-Bg" type="text" value="#333333">
                    <![CDATA[
                            AUI().ready(
                                'aui-color-picker-popover',
                                function(A) {

                                    var target = A.one('#[@NAMESPACE@]Navbar-Bg');
                                    target.attr('readonly', 'readonly');
                                    var currentValue = target.val();


                                    setTimeout(function() {

                                        target.ancestor().append("<span class='glyphicon glyphicon-pencil' aria-hidden='true' style='top: -30px;left: calc(100% - 25px);color: #869cad;'></span>");
                                        target.ancestor().append("<div id='[@NAMESPACE@]PortalMainColorPicker1'></div>");

                                            var [@NAMESPACE@]PortalMainColorPicker1 = new A.ColorPickerPopover(
                                                {
													trigger: target
                                                }
                                            ).render('#[@NAMESPACE@]PortalMainColorPicker1');

                                            [@NAMESPACE@]PortalMainColorPicker1.on('select',
                                                function(event) {
                                                    var hex = event.color;

                                                    target.val(hex);
                                                    target.setStyle('backgroundColor', hex);



													var rgb = hexToRgb(hex);

													var red=rgb.r;
													var blue=rgb.b;
													var green=rgb.g;

													var brightness;
													brightness = (red * 299) + (green * 587) + (blue * 114);
													brightness = brightness / 255000;

													if (brightness >= 0.5) {

														target.setStyle('color','#869cad');
														target.next().setStyle('color','#869cad');

													} else {

														target.setStyle('color','#ffffff');
														target.next().setStyle('color','#ffffff');

													};

                                                }
                                            );

											function hexToRgb(hex) {
                                                var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
                                                hex = hex.replace(shorthandRegex, function(m, r, g, b) {
                                                    return r + r + g + g + b + b;
                                                });

                                                var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
                                                return result ? {
                                                    r: parseInt(result[1], 16),
                                                    g: parseInt(result[2], 16),
                                                    b: parseInt(result[3], 16)
                                                } : null;
                                            };


                                    }, 1000);
                                }
                            );

                    ]]>
            </setting>

			<setting configurable="true" key="Navbar-Color" type="text" value="#ffffff">
                    <![CDATA[
                            AUI().ready(
                                'aui-color-picker-popover',
                                function(A) {

                                    var target = A.one('#[@NAMESPACE@]Navbar-Color');
                                    target.attr('readonly', 'readonly');
                                    var currentValue = target.val();


                                    setTimeout(function() {

                                        target.ancestor().append("<span class='glyphicon glyphicon-pencil' aria-hidden='true' style='top: -30px;left: calc(100% - 25px);color: #869cad;'></span>");
                                        target.ancestor().append("<div id='[@NAMESPACE@]PortalMainColorPicker1'></div>");

                                            var [@NAMESPACE@]PortalMainColorPicker1 = new A.ColorPickerPopover(
                                                {
													trigger: target
                                                }
                                            ).render('#[@NAMESPACE@]PortalMainColorPicker1');

                                            [@NAMESPACE@]PortalMainColorPicker1.on('select',
                                                function(event) {
                                                    var hex = event.color;

                                                    target.val(hex);
                                                    target.setStyle('backgroundColor', hex);



													var rgb = hexToRgb(hex);

													var red=rgb.r;
													var blue=rgb.b;
													var green=rgb.g;

													var brightness;
													brightness = (red * 299) + (green * 587) + (blue * 114);
													brightness = brightness / 255000;

													if (brightness >= 0.5) {

														target.setStyle('color','#869cad');
														target.next().setStyle('color','#869cad');

													} else {

														target.setStyle('color','#ffffff');
														target.next().setStyle('color','#ffffff');

													};

                                                }
                                            );

											function hexToRgb(hex) {
                                                var shorthandRegex = /^#?([a-f\d])([a-f\d])([a-f\d])$/i;
                                                hex = hex.replace(shorthandRegex, function(m, r, g, b) {
                                                    return r + r + g + g + b + b;
                                                });

                                                var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
                                                return result ? {
                                                    r: parseInt(result[1], 16),
                                                    g: parseInt(result[2], 16),
                                                    b: parseInt(result[3], 16)
                                                } : null;
                                            };


                                    }, 1000);
                                }
                            );

                    ]]>
            </setting>


            <setting configurable="true" key="Footer-Links" type="text" value="/footer"/>

            <setting configurable="true" key="Show-Facebook-Link" type="checkbox" value="true"/>
            <setting configurable="true" key="Facebook-Link" type="text" value="http://www.facebook.com"/>

            <setting configurable="true" key="Show-Twitter-Link" type="checkbox" value="true"/>
            <setting configurable="true" key="Twitter-Link" type="text" value="http://www.twitter.com"/>

            <setting configurable="true" key="Show-Instagram-Link" type="checkbox" value="true"/>
            <setting configurable="true" key="Instagram-Link" type="text" value="http://www.instagram.com"/>

            <setting configurable="true" key="Show-Linkedin-Link" type="checkbox" value="true"/>
            <setting configurable="true" key="Linkedin-Link" type="text" value="http://www.linkedin.com"/>

            <setting configurable="true" key="Show-Youtube-Link" type="checkbox" value="true"/>
            <setting configurable="true" key="Youtube-Link" type="text" value="http://www.youtube.com"/>

            <setting configurable="true" key="Show-Google-Plus-Link" type="checkbox" value="true"/>
            <setting configurable="true" key="Google-Plus-Link" type="text" value="https://plus.google.com"/>

 		</settings>
	</theme>
</look-and-feel>
